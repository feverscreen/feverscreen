{"version":3,"sources":["webpack:///./curve-fit/curve_fitting.js","webpack:///./curve-fit/curve_fitting_bg.js"],"names":["heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","dropObject","takeObject","ret","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","getStringFromWasm0","ptr","len","subarray","WASM_VECTOR_LEN","passArray8ToWasm0","arg","malloc","set","fitCurveThroughPoints","points","ptr0","len0","__wbindgen_number_new","arg0","__wbindgen_object_drop_ref","__wbg_new_6b6f346b4912cdae","__wbg_push_f353108e20ec67a0","arg1","__wbindgen_throw","Error"],"mappings":"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","file":"js/chunk-2d843444.e21bc1d7.js","sourcesContent":["/* eslint-disable */\nimport * as wasm from \"./curve_fitting_bg.wasm\";\nexport * from \"./curve_fitting_bg.js\";\n","/* eslint-disable */\nimport * as wasm from './curve_fitting_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {Uint8Array} points\n* @returns {Array<any>}\n*/\nexport function fitCurveThroughPoints(points) {\n    try {\n        var ptr0 = passArray8ToWasm0(points, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.fitCurveThroughPoints(ptr0, len0);\n        return takeObject(ret);\n    } finally {\n        points.set(getUint8Memory0().subarray(ptr0 / 1, ptr0 / 1 + len0));\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n    }\n}\n\nexport const __wbindgen_number_new = function(arg0) {\n    var ret = arg0;\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbg_new_6b6f346b4912cdae = function() {\n    var ret = new Array();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_push_f353108e20ec67a0 = function(arg0, arg1) {\n    var ret = getObject(arg0).push(getObject(arg1));\n    return ret;\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n"],"sourceRoot":""}